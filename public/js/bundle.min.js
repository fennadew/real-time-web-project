"use strict";

(function () {
    function r(e, n, t) {
        function o(i, f) {
            if (!n[i]) {
                if (!e[i]) {
                    var c = "function" == typeof require && require;if (!f && c) return c(i, !0);if (u) return u(i, !0);var a = new Error("Cannot find module '" + i + "'");throw a.code = "MODULE_NOT_FOUND", a;
                }var p = n[i] = { exports: {} };e[i][0].call(p.exports, function (r) {
                    var n = e[i][1][r];return o(n || r);
                }, p, p.exports, r, e, n, t);
            }return n[i].exports;
        }for (var u = "function" == typeof require && require, i = 0; i < t.length; i++) {
            o(t[i]);
        }return o;
    }return r;
})()({ 1: [function (require, module, exports) {}, {}], 2: [function (require, module, exports) {
        var htmlElements = {
            nextStationInput: document.getElementById('nextStation'),
            nextList: document.querySelector(".nextstation-autocomplete"),
            lastStationInput: document.getElementById('lastStation'),
            lastList: document.querySelector(".laststation-autocomplete"),
            retrievingMessage: document.querySelector('.retrieving'),
            errorMessage: document.querySelector('.error'),
            lonInput: document.getElementById('lon'),
            latInput: document.getElementById('lat'),
            loader: document.querySelector('.loader')
        };

        var options = {
            enableHighAccuracy: true,
            timeout: 5000
        };

        var callBackNavigator = {
            success: function success(position) {
                var positionUser = position.coords;
                htmlElements.lonInput.value = positionUser.longitude;
                htmlElements.latInput.value = positionUser.latitude;
                htmlElements.retrievingMessage.classList.add('hidden');
                htmlElements.errorMessage.classList.add('hidden');
                htmlElements.loader.classList.add('hidden');
                console.log(positionUser.longitude, positionUser.latitude);
            },
            error: function error(err) {
                console.log(err.message);
                htmlElements.errorMessage.classList.remove('hidden');
                htmlElements.retrievingMessage.classList.add('hidden');
                htmlElements.loader.classList.add('hidden');
            }
        };

        navigator.geolocation.getCurrentPosition(callBackNavigator.success, callBackNavigator.error, options);

        if (htmlElements.nextStationInput && htmlElements.nextStationInput.addEventListener) {
            var showList = function showList(input, list) {
                input.addEventListener("input", function () {
                    htmlElements.loader.classList.remove('hidden');
                    fetch('/api?nextStation=' + input.value).then(function (response) {
                        return response.json();
                    }).then(function (myJson) {
                        htmlElements.loader.classList.add('hidden');
                        createList(myJson, input, list);
                    });
                });
            };

            var createList = function createList(data, input, list) {
                clearList(list);

                var val = input.value;
                if (val.length > 0) {
                    var _loop = function _loop(i) {
                        if (data[i].name.substr(0, val.length).toUpperCase() === val.toUpperCase()) {
                            var listItem = document.createElement("li");
                            listItem.classList.add("autocomplete-items");
                            listItem.innerHTML = "<span>" + data[i].name.substr(0, val.length) + "</span>";
                            listItem.innerHTML += data[i].name.substr(val.length);
                            listItem.addEventListener("click", function (e) {
                                return function () {
                                    input.value = data[i].name;
                                    clearList(list);
                                };
                            }(i));
                            list.appendChild(listItem);
                        }
                    };

                    for (var i = 0; i < data.length; i++) {
                        _loop(i);
                    }
                }
            };

            var clearList = function clearList(list) {
                var elements = document.getElementsByClassName("autocomplete-items");
                if (elements) {
                    while (list.firstChild) {
                        list.removeChild(list.firstChild);
                    }
                }
            };

            showList(htmlElements.nextStationInput, htmlElements.nextList);
            showList(htmlElements.lastStationInput, htmlElements.lastList);
        }
    }, {}] }, {}, [1, 2]);
